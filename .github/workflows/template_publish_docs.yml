name: Deploy Documentation Template

on:
  workflow_call:
    inputs:
      package_name:
        description: 'Name of the package (e.g., framcore, framdata, framjules)'
        required: true
        type: string
      source_paths:
        description: 'Paths to monitor for changes (JSON array)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install Dependencies
        run: |
          echo "Installing dependencies for ${{ inputs.package_name }}"
          poetry install --only docs --extra-index-url https://test.pypi.org/simple/

      - name: Verify package structure
        run: |
          echo "Package structure for ${{ inputs.package_name }}:"
          ls -la
          echo "Docs directory:"
          ls -la docs/ || echo "No docs directory found"
          echo "MkDocs config:"
          ls -la mkdocs.yml || echo "No mkdocs.yml found"

      - name: Deploy Docs With Mike
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Configuring git for ${{ inputs.package_name }}"
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          VERSION=$(poetry version --short)
          echo "Deploying documentation for ${{ inputs.package_name }} version: $VERSION"

          echo "Deploying new documentation version with mike deploy..."
          poetry run mike deploy --push --update-aliases $VERSION latest
          poetry run mike set-default latest --push
          
          echo "Documentation for ${{ inputs.package_name }} deployed successfully!"
